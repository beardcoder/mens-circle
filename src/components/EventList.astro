---
import { getEvents, directusImage } from '@/lib/directus'
import type { Location } from '@/lib/directus/types'
import { Image } from 'astro:assets'
import dayjs from 'dayjs'

const events = await getEvents()

const upcomingEvents = events.filter((event) => dayjs().isBefore(dayjs(event.start_date)))
---

{
  upcomingEvents.length !== 0 && (
    <section class="py-32" id="events">
      <div class="mx-auto max-w-screen-2xl p-8">
        <h2 class="mb-16 text-4xl font-bold md:text-center md:text-6xl">
          NÃ¤chste <span class="text-primary-500">Veranstaltungen</span>
        </h2>
        <div class="grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
          {upcomingEvents.map((event) => (
            <a
              data-js="child-animation"
              href={`/events/${event.slug}`}
              class="bg-accent block overflow-hidden rounded-md border shadow-md transition-shadow hover:shadow-lg"
            >
              <div class="relative flex">
                <div class="after:to-accent relative after:absolute after:top-0 after:right-0 after:bottom-0 after:z-10 after:w-32 after:bg-linear-to-r after:from-transparent">
                  <Image
                    src={directusImage(event.image)}
                    alt={event.title ?? 'Veranstaltungsbild'}
                    width={280}
                    height={200}
                  />
                </div>
                <div class="z-20 -ml-20 p-6">
                  <h4 class="text-xl font-bold">{event.title}</h4>
                  <div class="bg-primary-500 absolute top-0 left-0 p-2 text-sm font-bold text-white">
                    <time datetime={event.date}>{dayjs(event.start_date).format('DD.MM.YY HH:mm')}</time>
                  </div>
                  <p>
                    <strong>Ort:</strong> {(event.location as Location).place}
                  </p>
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    </section>
  )
}
<script>
  import { animate, stagger, inView } from 'motion'

  inView(
    '#events',
    (element) => {
      animate(
        element.querySelectorAll('[data-js="child-animation"]'),
        { opacity: [0, 1], x: [-100, 0] },
        { type: 'spring', delay: stagger(0.25, { startDelay: 0.25 }) },
      )
    },
    { amount: 0.25 },
  )
</script>
