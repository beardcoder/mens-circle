---
import { Image } from 'astro:assets'
import dayjs from 'dayjs'
import RegistratonForm from '@/components/Events/RegistrationForm.tsx'

interface Props {
  title: string
  image: string
  date: string
  place: string
  address: string
  city: string
  zip: string
  event_id: string
}
const { title, image, date, place, address, city, zip, event_id } = Astro.props

const eventDate = dayjs(date).format('DD.MM.YY HH:mm')
---

<header class="relative flex max-h-[1200px] min-h-[600px] flex-col md:h-screen md:flex-row" id="hero">
  <div class="mx-auto flex w-full max-w-screen-2xl">
    <div class="flex flex-col justify-center p-8 md:w-1/2">
      <h1 class="text-6xl leading-none font-bold">
        <span class="block" data-js="child-animation">Anmeldung</span>
        <span class="block text-[0.6em]" data-js="child-animation">zum {title} am {eventDate}</span>
      </h1>
      <div class="mt-8 max-w-lg" data-js="child-animation">
        {
          dayjs().isAfter(dayjs(date)) ? (
            <div
              class="mb-4 flex items-center rounded-lg bg-red-50 p-4 text-sm text-red-800 dark:bg-stone-800 dark:text-red-400"
              role="alert"
              data-js="child-animation"
            >
              <svg
                class="me-3 inline h-4 w-4 shrink-0"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z" />
              </svg>
              <span class="sr-only">Info</span>
              <div>Dieses Event hat bereits stattgefunden.</div>
            </div>
          ) : (
            <RegistratonForm event={event_id} client:load />
          )
        }
      </div>
      {
        dayjs().isBefore(dayjs(date)) && (
          <div>
            <div>
              <h2 class="mt-6 mb-2 text-xl font-bold" data-js="child-animation">
                Veranstaltungsdaten:
              </h2>
              <div data-js="child-animation">
                <p>
                  <strong>Ort:</strong> {place}
                </p>
                <p>
                  <strong>Adresse:</strong>
                  {address}
                </p>
                <p>
                  <strong>Stadt:</strong>
                  {city}
                </p>
                <p>
                  <strong>PLZ:</strong>
                  {zip}
                </p>
              </div>
            </div>
            <div data-js="child-animation">
              <slot name="ical" />
            </div>
          </div>
        )
      }
    </div>
  </div>

  <div
    class="relative flex aspect-square overflow-hidden md:absolute md:top-0 md:right-0 md:bottom-0 md:left-1/2 md:aspect-auto"
  >
    <Image
      src={image}
      width={1280}
      height={1440}
      class="absolute inset-0 h-full w-full object-cover object-center"
      loading="eager"
      priority
      widths={[640, 768, 1024, 1280]}
      alt="Veranstaltungsbild"
    />
  </div>
</header>

<script>
  import { animate, stagger, inView } from 'motion'

  inView(
    '#hero',
    (element) => {
      animate(
        element.querySelectorAll('[data-js="child-animation"]'),
        { opacity: [0, 1], x: [-100, 0] },
        { type: 'spring', delay: stagger(0.25, { startDelay: 0.25 }) },
      )
    },
    { amount: 0.25 },
  )
</script>
